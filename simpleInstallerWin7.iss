; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "PyTn"
#define MyAppVersion "1.0"
#define MyAppPublisher "Selmen Arous"
#define MyAppURL "https://selmen.tn"
#define MyAppExeName "MyProg.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{10E0D286-4928-469E-A6F1-F5A213737C86}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
CreateAppDir=no
ChangesAssociations=yes
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=commandline
OutputBaseFilename=mysetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "french"; MessagesFile: "compiler:Languages\French.isl"
Name: "english"; MessagesFile: "compiler:Default.isl"

[Components]

Name: "Python_3112_x86"; Description: "Python 3.11.2 \n\r Ne d�cocher cette case que si vous vouler utiliser une autre version de python"; Types: full compact custom;
Name: "editors"; Description: "Editeurs Python(Thonny seulement pour le moment )"; Types: full compact custom;
Name: "bac_sc"; Description: "Biblioth�ques pour bac scientifiques / bac informatiques : PyQt5 / Numpy / Designer "; Types: full compact custom;
Name: "bac_eco"; Description: "Biblioth�ques pour bac �conomie:  pandas matplotlib xlrd xlsxwriter xlwt openpyxl jupyterlab notebook"; Types: full compact custom;

[Files]
Source: "G:\dev\python\pytn\win7x86\Windows6.1-KB2533623-x86.msu"; DestDir: "{tmp}"; Flags: ignoreversion ;
Source: "G:\dev\python\pytn\win7x86\Windows6.1-KB2999226-x86.msu"; DestDir: "{tmp}"; Flags: ignoreversion ; 
Source: "G:\dev\python\pytn\win7x86\python-3.11.2-full-win7compatible.exe"; DestDir: "{tmp}"; Flags: ignoreversion ; Components: "Python_3112_x86"
Source: "G:\dev\python\pytn\win7x86\deps\*.whl" ; DestDir: "{tmp}\deps\";
Source: "G:\dev\python\pytn\win7x86\designer\*.*" ; DestDir: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\PyQt5\Qt5\bin\"    ; Components: "bac_sc"
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
[Tasks]
Name: "ThonnyDesktopIcon"; Description: "Cr�er icone bureau pour Thonny"   ; Components: "editors"
Name: "DesignerDesktopIcon"; Description: "Cr�er icone bureau pour Designer"   ; Components: "bac_sc"
Name: "LabDesktopIcon"; Description: "Cr�er icone bureau pour Jupyter Lab"   ; Components: "bac_eco"
Name: "NotebookDesktopIcon"; Description: "Cr�er icone bureau pour Jupyter Notebook Clasique"   ; Components: "bac_eco"
[Icons]
Name: "{group}\PyTn\Thonny"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\thonny.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\thonny\res\thonny.ico" ; Components: "editors"
Name: "{group}\PyTn\QT Designer"; Filename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\PyQt5\Qt5\bin\designer.exe" ; Components: "bac_sc" 
Name: "{autodesktop}\Thonny"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\thonny.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\thonny\res\thonny.ico" ; Tasks: "ThonnyDesktopIcon" 
Name: "{autodesktop}\Qt Designer"; Filename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\PyQt5\Qt5\bin\designer.exe"; Tasks: "DesignerDesktopIcon"
Name: "{group}\PyTn\Jupyter Lab"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\jupyter-lab.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\jupyter_server\static\favicon.ico " ; Components: "bac_eco"
Name: "{group}\PyTn\Jupyter Notebook Clasique"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\jupyter-nbclassic.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\jupyter_server\static\favicon-notebook.ico " ; Components: "bac_eco"
Name: "{autodesktop}\Jupyter Lab"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\jupyter-lab.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\jupyter_server\static\favicon.ico " ; Tasks: "LabDesktopIcon"
Name: "{autodesktop}\Jupyter Notebook Clasique"; Filename: "{localappdata}\Programs\Python\Python311-32\Scripts\jupyter-nbclassic.exe"; IconFilename: "{localappdata}\Programs\Python\Python311-32\Lib\site-packages\jupyter_server\static\favicon-notebook.ico " ; Tasks: "NotebookDesktopIcon"

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""
[Run]

Filename:"{tmp}\python-3.11.2-full-win7compatible.exe" ;Parameters:  "PrependPath=1 SimpleInstall=1 "  ; Description: "Installation de Windows7 SP1(s'il n'est pas installé) , il peut être nécessaire de redémarrer "; Components:    "Python_3112_x86"
Filename:"py.exe" ;Parameters: "-m pip install thonny --find-links {tmp}\deps --prefer-binary" ; Components: "editors"
Filename:"py.exe" ;Parameters: "-m pip install pyqt5 numpy --find-links {tmp}\deps --prefer-binary" ; Components: "bac_sc"
Filename:"py.exe" ;Parameters: "-m pip install pandas matplotlib xlrd xlsxwriter xlwt openpyxl jupyterlab notebook --prefer-binary --find-links {tmp}\deps" ; Components: "bac_eco"
[Code]

function IsKBInstalled(KB: string): Boolean;
var
  WbemLocator: Variant;
  WbemServices: Variant;
  WQLQuery: string;
  WbemObjectSet: Variant;
begin
  WbemLocator := CreateOleObject('WbemScripting.SWbemLocator');
  WbemServices := WbemLocator.ConnectServer('', 'root\CIMV2');

  WQLQuery := 'select * from Win32_QuickFixEngineering where HotFixID = ''' + KB + '''';

  WbemObjectSet := WbemServices.ExecQuery(WQLQuery);
  Result := (not VarIsNull(WbemObjectSet)) and (WbemObjectSet.Count > 0);
end;


const
  (*** Customize the following to your own name. ***)
  RunOnceName = 'Red�marrage de l'' installation';

  QuitMessageReboot = 'The installation of a prerequisite program was not completed. You will need to restart your computer to complete that installation.'#13#13'After restarting your computer, Setup will continue next time an administrator logs in.';
  QuitMessageError = 'Error. Cannot continue.';

var
  Restarted: Boolean;

function InitializeSetup(): Boolean;
begin
  Restarted := ExpandConstant('{param:restart|0}') = '1';

  if not Restarted then begin
    Result := not RegValueExists(HKA, 'Software\Microsoft\Windows\CurrentVersion\RunOnce', RunOnceName);
    if not Result then
      MsgBox(QuitMessageReboot, mbError, mb_Ok);
  end else
    Result := True;
end;

function DetectAndInstallPrerequisites: Boolean;
var
  
  ResultCode: Integer;
begin
  
  
      ExtractTemporaryFiles('{tmp}\Windows6.1-KB2999226-x86.msu');
      ExtractTemporaryFiles('{tmp}\Windows6.1-KB2533623-x86.msu');
      Exec('wusa.exe',ExpandConstant('{tmp}')+'\Windows6.1-KB2999226-x86.msu /quiet /norestart',  '',SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
      Exec('wusa.exe',ExpandConstant('{tmp}')+'\Windows6.1-KB2533623-x86.msu /quiet /norestart',  '',SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
  
  

    Result := True;

  (*** Remove the following block! Used by this demo to simulate a prerequisite install requiring a reboot. ***)
   
end;

function Quote(const S: String): String;
begin
  Result := '"' + S + '"';
end;

function AddParam(const S, P, V: String): String;
begin
  if V <> '""' then
    Result := S + ' /' + P + '=' + V;
end;

function AddSimpleParam(const S, P: String): String;
begin
 Result := S + ' /' + P;
end;

procedure CreateRunOnceEntry;
var
  RunOnceData: String;
begin
  RunOnceData := Quote(ExpandConstant('{srcexe}')) + ' /restart=1';
  RunOnceData := AddParam(RunOnceData, 'LANG', ExpandConstant('{language}'));
  RunOnceData := AddParam(RunOnceData, 'DIR', Quote(WizardDirValue));
  RunOnceData := AddParam(RunOnceData, 'GROUP', Quote(WizardGroupValue));
  if WizardNoIcons then
    RunOnceData := AddSimpleParam(RunOnceData, 'NOICONS');
  RunOnceData := AddParam(RunOnceData, 'TYPE', Quote(WizardSetupType(False)));
  RunOnceData := AddParam(RunOnceData, 'COMPONENTS', Quote(WizardSelectedComponents(False)));
  RunOnceData := AddParam(RunOnceData, 'TASKS', Quote(WizardSelectedTasks(False)));

  (*** Place any custom user selection you want to remember below. ***)

  //<your code here>
  
  RegWriteStringValue(HKA, 'Software\Microsoft\Windows\CurrentVersion\RunOnce', RunOnceName, RunOnceData);
end;

function PrepareToInstall(var NeedsRestart: Boolean): String;

  
begin
  
    if not IsKBInstalled('KB2999226') or   not IsKBInstalled('KB2533623') Then begin
      DetectAndInstallPrerequisites
      CreateRunOnceEntry;
      NeedsRestart := True;
      Result := QuitMessageReboot;
    end;
  
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  Result := Restarted;
end;
;Source: "G:\dev\python\pytn\win7x86\Windows6.1-KB2533623-x86.msu"; DestDir: "{tmp}"; Flags: ignoreversion ; Components: "Python_3112_x86"
Filename:"py.exe" ;Parameters: "-m pip install thonny --find-links {tmp}\deps --prefer-binary" ; Components: "editors"
Filename:"py.exe" ;Parameters: "-m pip install pyqt5 numpy --find-links {tmp}\deps --prefer-binary" ; Components: "bac_sc"
Filename:"py.exe" ;Parameters: "-m pip install pandas matplotlib xlrd xlsxwriter xlwt openpyxl jupyterlab notebook --prefer-binary --find-links {tmp}\deps" ; Components: "bac_eco"
[Code]

function IsKBInstalled(KB: string): Boolean;
var
  WbemLocator: Variant;
  WbemServices: Variant;
  WQLQuery: string;
  WbemObjectSet: Variant;
begin
  WbemLocator := CreateOleObject('WbemScripting.SWbemLocator');
  WbemServices := WbemLocator.ConnectServer('', 'root\CIMV2');

  WQLQuery := 'select * from Win32_QuickFixEngineering where HotFixID = ''' + KB + '''';

  WbemObjectSet := WbemServices.ExecQuery(WQLQuery);
  Result := (not VarIsNull(WbemObjectSet)) and (WbemObjectSet.Count > 0);
end;


const
  (*** Customize the following to your own name. ***)
  RunOnceName = 'Red�marrage de l'' installation';

  QuitMessageReboot = 'The installation of a prerequisite program was not completed. You will need to restart your computer to complete that installation.'#13#13'After restarting your computer, Setup will continue next time an administrator logs in.';
  QuitMessageError = 'Error. Cannot continue.';

var
  Restarted: Boolean;

function InitializeSetup(): Boolean;
begin
  Restarted := ExpandConstant('{param:restart|0}') = '1';

  if not Restarted then begin
    Result := not RegValueExists(HKA, 'Software\Microsoft\Windows\CurrentVersion\RunOnce', RunOnceName);
    if not Result then
      MsgBox(QuitMessageReboot, mbError, mb_Ok);
  end else
    Result := True;
end;

function DetectAndInstallPrerequisites: Boolean;
var
  
  ResultCode: Integer;
begin
  
  
      ExtractTemporaryFiles('{tmp}\Windows6.1-KB2999226-x86.msu');
      ExtractTemporaryFiles('{tmp}\Windows6.1-KB2533623-x86.msu');
      Exec('wusa.exe',ExpandConstant('{tmp}')+'\Windows6.1-KB2999226-x86.msu /quiet /norestart',  '',SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
      Exec('wusa.exe',ExpandConstant('{tmp}')+'\Windows6.1-KB2533623-x86.msu /quiet /norestart',  '',SW_SHOWNORMAL, ewWaitUntilTerminated, ResultCode);
  
  

    Result := True;

  (*** Remove the following block! Used by this demo to simulate a prerequisite install requiring a reboot. ***)
   
end;

function Quote(const S: String): String;
begin
  Result := '"' + S + '"';
end;

function AddParam(const S, P, V: String): String;
begin
  if V <> '""' then
    Result := S + ' /' + P + '=' + V;
end;

function AddSimpleParam(const S, P: String): String;
begin
 Result := S + ' /' + P;
end;

procedure CreateRunOnceEntry;
var
  RunOnceData: String;
begin
  RunOnceData := Quote(ExpandConstant('{srcexe}')) + ' /restart=1';
  RunOnceData := AddParam(RunOnceData, 'LANG', ExpandConstant('{language}'));
  RunOnceData := AddParam(RunOnceData, 'DIR', Quote(WizardDirValue));
  RunOnceData := AddParam(RunOnceData, 'GROUP', Quote(WizardGroupValue));
  if WizardNoIcons then
    RunOnceData := AddSimpleParam(RunOnceData, 'NOICONS');
  RunOnceData := AddParam(RunOnceData, 'TYPE', Quote(WizardSetupType(False)));
  RunOnceData := AddParam(RunOnceData, 'COMPONENTS', Quote(WizardSelectedComponents(False)));
  RunOnceData := AddParam(RunOnceData, 'TASKS', Quote(WizardSelectedTasks(False)));

  (*** Place any custom user selection you want to remember below. ***)

  //<your code here>
  
  RegWriteStringValue(HKA, 'Software\Microsoft\Windows\CurrentVersion\RunOnce', RunOnceName, RunOnceData);
end;

function PrepareToInstall(var NeedsRestart: Boolean): String;

  
begin
  
    if not IsKBInstalled('KB2999226') or   not IsKBInstalled('KB2533623') Then begin
      DetectAndInstallPrerequisites
      CreateRunOnceEntry;
      NeedsRestart := True;
      Result := QuitMessageReboot;
    end;
  
end;

function ShouldSkipPage(PageID: Integer): Boolean;
begin
  Result := Restarted;
end;


